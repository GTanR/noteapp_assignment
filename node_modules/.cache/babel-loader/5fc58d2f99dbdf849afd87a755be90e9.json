{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gtanu\\\\Desktop\\\\Assignment_noteapp\\\\noteapp\\\\src\\\\editor\\\\editor.js\";\nimport React from 'react';\nimport ReactQuill from 'react-quill';\nimport debounce from '../helpers';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\n\nclass EditorComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      this.setState({\n        body: this.props.selectedNote.body,\n        title: this.props.selectedNote.title,\n        id: this.props.selectedNote.id\n      });\n    };\n\n    this.componentDidUpdate = () => {\n      if (this.props.selectedNote.id !== this.state.id) {\n        this.setState({\n          body: this.props.selectedNote.body,\n          title: this.props.selectedNote.title,\n          id: this.props.selectedNote.id\n        });\n      }\n    };\n\n    this.updateBody = async val => {\n      await this.setState({\n        body: val\n      });\n      this.update();\n    };\n\n    this.updateTitle = async txt => {\n      await this.setState({\n        title: txt\n      });\n      this.update();\n    };\n\n    this.update = debounce(() => {\n      this.props.noteUpdate(this.state.id, {\n        title: this.state.title,\n        body: this.state.body\n      });\n    }, 1500);\n    this.state = {\n      body: '',\n      title: '',\n      id: ''\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.editorContainer,\n      children: [/*#__PURE__*/_jsxDEV(BorderColorIcon, {\n        className: classes.editIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.titleInput,\n        placeholder: 'Note title..',\n        value: this.state.title ? this.state.title : '',\n        onChange: e => this.updateTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        value: this.state.body,\n        onChange: this.updateBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles)(EditorComponent);","map":{"version":3,"sources":["C:/Users/gtanu/Desktop/Assignment_noteapp/noteapp/src/editor/editor.js"],"names":["React","ReactQuill","debounce","BorderColorIcon","withStyles","styles","EditorComponent","Component","constructor","componentDidMount","setState","body","props","selectedNote","title","id","componentDidUpdate","state","updateBody","val","update","updateTitle","txt","noteUpdate","render","classes","editorContainer","editIcon","titleInput","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,eAAN,SAA8BN,KAAK,CAACO,SAApC,CAA8C;AAC1CC,EAAAA,WAAW,GAAE;AACT;;AADS,SAQbC,iBARa,GAQO,MAAM;AACtB,WAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwBF,IADpB;AAEVG,QAAAA,KAAK,EAAC,KAAKF,KAAL,CAAWC,YAAX,CAAwBC,KAFpB;AAGVC,QAAAA,EAAE,EAAE,KAAKH,KAAL,CAAWC,YAAX,CAAwBE;AAHlB,OAAd;AAKH,KAdY;;AAAA,SAebC,kBAfa,GAeQ,MAAM;AACvB,UAAG,KAAKJ,KAAL,CAAWC,YAAX,CAAwBE,EAAxB,KAA+B,KAAKE,KAAL,CAAWF,EAA7C,EAAiD;AAC7C,aAAKL,QAAL,CAAc;AACVC,UAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwBF,IADpB;AAEVG,UAAAA,KAAK,EAAC,KAAKF,KAAL,CAAWC,YAAX,CAAwBC,KAFpB;AAGVC,UAAAA,EAAE,EAAE,KAAKH,KAAL,CAAWC,YAAX,CAAwBE;AAHlB,SAAd;AAKH;AACJ,KAvBY;;AAAA,SA2CbG,UA3Ca,GA2CA,MAAOC,GAAP,IAAa;AACtB,YAAM,KAAKT,QAAL,CAAc;AAACC,QAAAA,IAAI,EAACQ;AAAN,OAAd,CAAN;AACA,WAAKC,MAAL;AACH,KA9CY;;AAAA,SA+CbC,WA/Ca,GA+CC,MAAOC,GAAP,IAAe;AACzB,YAAM,KAAKZ,QAAL,CAAc;AAACI,QAAAA,KAAK,EAACQ;AAAP,OAAd,CAAN;AACA,WAAKF,MAAL;AACH,KAlDY;;AAAA,SAmDbA,MAnDa,GAmDJlB,QAAQ,CAAC,MAAI;AAClB,WAAKU,KAAL,CAAWW,UAAX,CAAsB,KAAKN,KAAL,CAAWF,EAAjC,EAAqC;AACjCD,QAAAA,KAAK,EAAC,KAAKG,KAAL,CAAWH,KADgB;AAEjCH,QAAAA,IAAI,EAAE,KAAKM,KAAL,CAAWN;AAFgB,OAArC;AAIH,KALgB,EAKd,IALc,CAnDJ;AAET,SAAKM,KAAL,GAAa;AACTN,MAAAA,IAAI,EAAE,EADG;AAETG,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,EAAE,EAAE;AAHK,KAAb;AAKH;;AAiBDS,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAY,KAAKb,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAEa,OAAO,CAACC,eAAxB;AAAA,8BACI,QAAC,eAAD;AACI,QAAA,SAAS,EAAED,OAAO,CAACE;AADvB;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AACI,QAAA,SAAS,EAAEF,OAAO,CAACG,UADvB;AAEI,QAAA,WAAW,EAAE,cAFjB;AAGI,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWH,KAAX,GAAmB,KAAKG,KAAL,CAAWH,KAA9B,GAAsC,EAHjD;AAII,QAAA,QAAQ,EAAGe,CAAD,IAAM,KAAKR,WAAL,CAAiBQ,CAAC,CAACC,MAAF,CAASC,KAA1B;AAJpB;AAAA;AAAA;AAAA;AAAA,cAJJ,eAUI,QAAC,UAAD;AACI,QAAA,KAAK,EAAI,KAAKd,KAAL,CAAWN,IADxB;AAEI,QAAA,QAAQ,EAAI,KAAKO;AAFrB;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AA3CyC;;AA4D9C,eAAed,UAAU,CAACC,MAAD,CAAV,CAAmBC,eAAnB,CAAf","sourcesContent":["import React from 'react'\nimport ReactQuill from 'react-quill'\nimport debounce from '../helpers'\nimport BorderColorIcon from '@material-ui/icons/BorderColor'\nimport { withStyles } from '@material-ui/core/styles'\nimport styles from './styles'\n\nclass EditorComponent extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            body: '',\n            title: '',\n            id: ''\n        }\n    }\n    componentDidMount = () => {\n        this.setState({\n            body: this.props.selectedNote.body,\n            title:this.props.selectedNote.title,\n            id: this.props.selectedNote.id\n        })\n    }\n    componentDidUpdate = () => {\n        if(this.props.selectedNote.id !== this.state.id) {\n            this.setState({\n                body: this.props.selectedNote.body,\n                title:this.props.selectedNote.title,\n                id: this.props.selectedNote.id\n            })\n        }\n    }\n    render(){\n        const {classes} = this.props\n        return(\n            <div className={classes.editorContainer}>\n                <BorderColorIcon\n                    className={classes.editIcon}>\n                </BorderColorIcon>\n                <input\n                    className={classes.titleInput}\n                    placeholder={'Note title..'}\n                    value={this.state.title ? this.state.title : ''}\n                    onChange={(e)=> this.updateTitle(e.target.value)}>\n                </input>\n                <ReactQuill \n                    value = {this.state.body}\n                    onChange = {this.updateBody}/>\n            </div>\n        )\n    }\n    updateBody = async (val)=>{\n        await this.setState({body:val})\n        this.update()\n    }\n    updateTitle = async (txt) => {\n        await this.setState({title:txt})\n        this.update()\n    }\n    update = debounce(()=>{\n        this.props.noteUpdate(this.state.id, {\n            title:this.state.title,\n            body: this.state.body\n        })\n    }, 1500)\n}\n\nexport default withStyles(styles)(EditorComponent)"]},"metadata":{},"sourceType":"module"}