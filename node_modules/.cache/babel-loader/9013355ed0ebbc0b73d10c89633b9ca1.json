{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gtanu\\\\Desktop\\\\Assignment_noteapp\\\\noteapp\\\\src\\\\sidebar\\\\sidebar.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport List from '@material-ui/core/List';\nimport { Divider, Button } from '@material-ui/core';\nimport SidebarItemComponent from '../sidebaritem/sidebaritem';\n\nclass SidebarComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.newNote = () => {\n      this.props.newNote();\n    };\n\n    this.selectNote = (n, i) => {\n      this.props.selectNote(n, i);\n    };\n\n    this.deleteNote = note => {\n      this.props.deleteNote(note);\n    };\n  }\n\n  render() {\n    const {\n      notes,\n      classes,\n      selectedNoteIndex\n    } = this.props;\n\n    if (notes) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.sidebarContainer,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.newNote,\n          className: classes.newNoteBtn,\n          children: \"New Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: notes.map((_note, _index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(SidebarItemComponent, {\n                _note: _note,\n                _index: _index,\n                selectedNoteIndex: selectedNoteIndex,\n                selectNote: this.selectNote,\n                deleteNote: this.deleteNote\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 37\n              }, this)]\n            }, _index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this);\n    }\n  }\n\n}\n\nexport default withStyles(styles)(SidebarComponent);","map":{"version":3,"sources":["C:/Users/gtanu/Desktop/Assignment_noteapp/noteapp/src/sidebar/sidebar.js"],"names":["React","withStyles","styles","List","Divider","Button","SidebarItemComponent","SidebarComponent","Component","constructor","newNote","props","selectNote","n","i","deleteNote","note","render","notes","classes","selectedNoteIndex","sidebarContainer","newNoteBtn","map","_note","_index"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,mBAAhC;AACA,OAAOC,oBAAP,MAAiC,4BAAjC;;AAEA,MAAMC,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAA+C;AAC3CC,EAAAA,WAAW,GAAE;AACT;;AADS,SAwCbC,OAxCa,GAwCJ,MAAI;AACT,WAAKC,KAAL,CAAWD,OAAX;AACH,KA1CY;;AAAA,SA2CbE,UA3Ca,GA2CA,CAACC,CAAD,EAAGC,CAAH,KAAS;AAClB,WAAKH,KAAL,CAAWC,UAAX,CAAsBC,CAAtB,EAAwBC,CAAxB;AACH,KA7CY;;AAAA,SA8CbC,UA9Ca,GA8CCC,IAAD,IAAU;AACnB,WAAKL,KAAL,CAAWI,UAAX,CAAsBC,IAAtB;AACH,KAhDY;AAEZ;;AACLC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAsC,KAAKT,KAAjD;;AAEA,QAAGO,KAAH,EAAS;AACL,0BACI;AAAK,QAAA,SAAS,EAAEC,OAAO,CAACE,gBAAxB;AAAA,gCACI,QAAC,MAAD;AACA,UAAA,OAAO,EAAI,KAAKX,OADhB;AAEA,UAAA,SAAS,EAAIS,OAAO,CAACG,UAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,IAAD;AAAA,oBAEQJ,KAAK,CAACK,GAAN,CAAU,CAACC,KAAD,EAAOC,MAAP,KAAkB;AACxB,gCACI;AAAA,sCACI,QAAC,oBAAD;AACI,gBAAA,KAAK,EAAED,KADX;AAEI,gBAAA,MAAM,EAAEC,MAFZ;AAGI,gBAAA,iBAAiB,EAAEL,iBAHvB;AAII,gBAAA,UAAU,EAAI,KAAKR,UAJvB;AAKI,gBAAA,UAAU,EAAI,KAAKG;AALvB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAQI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,sBARJ;AAAA,eAAUU,MAAV;AAAA;AAAA;AAAA;AAAA,oBADJ;AAYH,WAbD;AAFR;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AA4BH,KA7BD,MA8BK;AACD,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AAxC8C;;AAoD/C,eAAexB,UAAU,CAACC,MAAD,CAAV,CAAmBK,gBAAnB,CAAf","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport List from '@material-ui/core/List';\nimport { Divider, Button } from '@material-ui/core';\nimport SidebarItemComponent from '../sidebaritem/sidebaritem';\n\nclass SidebarComponent extends React.Component {\n    constructor(){\n        super()\n    }\nrender(){\n    const {notes, classes, selectedNoteIndex} = this.props\n\n    if(notes){\n        return(\n            <div className={classes.sidebarContainer}>\n                <Button\n                onClick = {this.newNote}\n                className = {classes.newNoteBtn}>\n                    New Note\n                </Button>\n                \n                <List>\n                    {\n                        notes.map((_note,_index) => {\n                            return(\n                                <div key={_index}>\n                                    <SidebarItemComponent\n                                        _note={_note}\n                                        _index={_index}\n                                        selectedNoteIndex={selectedNoteIndex}\n                                        selectNote = {this.selectNote}\n                                        deleteNote = {this.deleteNote}>\n                                    </SidebarItemComponent>\n                                    <Divider></Divider>\n                                </div>\n                            )\n                        })\n                    }\n                </List>\n            </div>\n        )\n    }\n    else {\n        return(<div>Loading</div>)\n    }\n}\n    newNote= ()=>{\n        this.props.newNote()\n    }\n    selectNote = (n,i) => {\n        this.props.selectNote(n,i)\n    }\n    deleteNote = (note) => {\n        this.props.deleteNote(note)\n    }\n}\n\nexport default withStyles(styles)(SidebarComponent)"]},"metadata":{},"sourceType":"module"}